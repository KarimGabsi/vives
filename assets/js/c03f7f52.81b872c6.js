"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[9456],{4137:(t,e,a)=>{a.d(e,{Zo:()=>l,kt:()=>N});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function m(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?m(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},m=Object.keys(t);for(n=0;n<m.length;n++)a=m[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(t);for(n=0;n<m.length;n++)a=m[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=n.createContext({}),o=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},l=function(t){var e=o(t.components);return n.createElement(i.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,m=t.originalType,i=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=o(a),N=r,h=u["".concat(i,".").concat(N)]||u[N]||c[N]||m;return a?n.createElement(h,p(p({ref:e},l),{},{components:a})):n.createElement(h,p({ref:e},l))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var m=a.length,p=new Array(m);p[0]=u;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:r,p[1]=s;for(var o=2;o<m;o++)p[o]=a[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7306:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>p,default:()=>c,frontMatter:()=>m,metadata:()=>s,toc:()=>o});var n=a(7462),r=(a(7294),a(4137));const m={sidebar_position:4},p="A* algorithm",s={unversionedId:"Optimal Search/A Star",id:"Optimal Search/A Star",title:"A* algorithm",description:"Is a UNIFORM COST algorithm with:",source:"@site/docs-intro-to-ai/3 - Optimal Search/4. A Star.md",sourceDirName:"3 - Optimal Search",slug:"/Optimal Search/A Star",permalink:"/vives/docs-intro-to-ai/Optimal Search/A Star",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Heuristic Estimate Extention",permalink:"/vives/docs-intro-to-ai/Optimal Search/Heuristic Estimate Extention"},next:{title:"Final Assignment",permalink:"/vives/docs-intro-to-ai/Erasmus/Final Assignment"}},i={},o=[{value:"Pseudocode",id:"pseudocode",level:2}],l={toc:o};function c(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"a-algorithm"},"A* algorithm"),(0,r.kt)("p",null,"Is a UNIFORM COST algorithm with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Branch and bound extention"),(0,r.kt)("li",{parentName:"ul"},"Estimate extention"),(0,r.kt)("li",{parentName:"ul"},"Redundant path deletion extention")),(0,r.kt)("h2",{id:"pseudocode"},"Pseudocode"),(0,r.kt)("p",null,"1) QUEUE (path containing the root)"),(0,r.kt)("p",null,"2) WHILE (QUEUE is not empty AND ",(0,r.kt)("strong",{parentName:"p"},"first path does not reach goal"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remove the first path from the QUEUE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create new paths (to all children)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Reject the new paths with loops")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add the new paths to the QUEUE and sort the entire QUEUE ",(0,r.kt)("strong",{parentName:"p"},"by"),"  ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"F"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"x"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"c"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"o"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"s"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"t"),(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"bold"},"h")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\bold{F(x)= cost + h}")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathbf"},"F"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathbf"},"x"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathbf"},"cost"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathbf"},"h")))))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"IF QUEUE contains:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"path P terminating I, with COST_P")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"path q containing I, with COST_Q")," ",(0,r.kt)("br",null))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AND IF COST_P >= COST_Q THEN:")," ",(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"DELETE path P")))),(0,r.kt)("p",null,"3) IF (goal reached)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"THEN SUCCESS"),(0,r.kt)("li",{parentName:"ul"},"ELSE FAILURE")))}c.isMDXComponent=!0}}]);