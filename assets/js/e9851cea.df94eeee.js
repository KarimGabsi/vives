"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[2975],{4137:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>k});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function m(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?m(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},m=Object.keys(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),o=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},i=function(e){var a=o(e.components);return n.createElement(l.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},N=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,m=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),N=o(t),k=r,h=N["".concat(l,".").concat(k)]||N[k]||c[k]||m;return t?n.createElement(h,s(s({ref:a},i),{},{components:t})):n.createElement(h,s({ref:a},i))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var m=t.length,s=new Array(m);s[0]=N;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,s[1]=p;for(var o=2;o<m;o++)s[o]=t[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},2032:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>m,metadata:()=>p,toc:()=>o});var n=t(7462),r=(t(7294),t(4137));const m={sidebar_position:3},s="Breadth First Search",p={unversionedId:"Blind Search/BFS",id:"Blind Search/BFS",title:"Breadth First Search",description:"image",source:"@site/docs-intro-to-ai/1 - Blind Search/2. BFS.md",sourceDirName:"1 - Blind Search",slug:"/Blind Search/BFS",permalink:"/vives/docs-intro-to-ai/Blind Search/BFS",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Depth First Search",permalink:"/vives/docs-intro-to-ai/Blind Search/DFS"},next:{title:"Non-Deterministic Search",permalink:"/vives/docs-intro-to-ai/Blind Search/NDS"}},l={},o=[{value:"Pseudocode",id:"pseudocode",level:2},{value:"Criteria",id:"criteria",level:3},{value:"Speed &amp; Memory",id:"speed--memory",level:3},{value:"CODE",id:"code",level:2},{value:"State Space Declaration",id:"state-space-declaration",level:3},{value:"Exercise",id:"exercise",level:3}],i={toc:o};function c(e){let{components:a,...m}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,m,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"breadth-first-search"},"Breadth First Search"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:t(663).Z,title:"dfs vs bfs",width:"1000",height:"420"})),(0,r.kt)("h2",{id:"pseudocode"},"Pseudocode"),(0,r.kt)("p",null,"1) QUEUE (path containing the root)"),(0,r.kt)("p",null,"2) WHILE (QUEUE is not empty AND goal is not reached)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remove the first path from the QUEUE"),(0,r.kt)("li",{parentName:"ul"},"Create new paths (to all children)"),(0,r.kt)("li",{parentName:"ul"},"Reject the new paths with loops"),(0,r.kt)("li",{parentName:"ul"},"Add the new path to the ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("u",null,"back"))," of QUEUE")),(0,r.kt)("p",null,"3) IF (goal reached)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"THEN SUCCESS"),(0,r.kt)("li",{parentName:"ul"},"ELSE FAILURE")),(0,r.kt)("h3",{id:"criteria"},"Criteria"),(0,r.kt)("p",null,"b = depth of the tree ",(0,r.kt)("br",null),"\nd = (average) branching factor of the tree ",(0,r.kt)("br",null),"\nm = depth of the shallowest solution ",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"speed--memory"},"Speed & Memory"),(0,r.kt)("div",{className:"math math-display"},(0,r.kt)("span",{parentName:"div",className:"katex-display"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"T"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"m"),(0,r.kt)("mi",{parentName:"mrow"},"e"),(0,r.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"d"),(0,r.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,r.kt)("mi",{parentName:"mrow"},"S"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"a"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"e"),(0,r.kt)("mtext",{parentName:"mrow"},"\xa0"),(0,r.kt)("mi",{parentName:"mrow"},"C"),(0,r.kt)("mi",{parentName:"mrow"},"o"),(0,r.kt)("mi",{parentName:"mrow"},"m"),(0,r.kt)("mi",{parentName:"mrow"},"p"),(0,r.kt)("mi",{parentName:"mrow"},"l"),(0,r.kt)("mi",{parentName:"mrow"},"e"),(0,r.kt)("mi",{parentName:"mrow"},"x"),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mi",{parentName:"mrow"},"y"),(0,r.kt)("mo",{parentName:"mrow"},":"),(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"b"),(0,r.kt)("mi",{parentName:"msup"},"m")),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Time\\ and\\ State\\ Complexity: O(b^m)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"im"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,r.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"an"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,r.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"St"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,r.kt)("span",{parentName:"span",className:"mspace"},"\xa0"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07153em"}},"C"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"pl"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},":"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.7144em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.113em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"m")))))))),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("h2",{id:"code"},"CODE"),(0,r.kt)("h3",{id:"state-space-declaration"},"State Space Declaration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a Maze")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"maze = Maze.create(['o....',\n                    '.###.',\n                    '.#*#.',\n                    '.#...',\n                    '.....'])\nmaze.plot()\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Transform the Maze Object into a ",(0,r.kt)("strong",{parentName:"li"},"MazeState")," object and get the initial path.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"initial_state = MazeState(maze, maze.get_start_position())\ninitial_path = Path(initial_state)\n")),(0,r.kt)("h3",{id:"exercise"},"Exercise"),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Implement a Depth/Breadth First Search Algorithm")),(0,r.kt)("p",null,"Don't forget to pass the initial path."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def exercise_function(initial_path):\n    pass\n\npath_to_goal = exercise_function(initial_path)\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Plot the solution")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"maze.plot(solution_path=path_to_goal.get_current_solution())\n")))}c.isMDXComponent=!0},663:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/dfs_bfs-01c5ce0bf13d99a9f4811525c39f5219.webp"}}]);