"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[7888],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),g=s(n),d=r,m=g["".concat(l,".").concat(d)]||g[d]||u[d]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(4137));const o={sidebar_position:2},i="Epsagon SDK for python",p={unversionedId:"Chapter 4 - Epsagon/epsagon SDK for python",id:"Chapter 4 - Epsagon/epsagon SDK for python",title:"Epsagon SDK for python",description:"Source: Official Documentation",source:"@site/docs-cloud-for-ai/Chapter 4 - Epsagon/2. epsagon SDK for python.md",sourceDirName:"Chapter 4 - Epsagon",slug:"/Chapter 4 - Epsagon/epsagon SDK for python",permalink:"/vives/docs-cloud-for-ai/Chapter 4 - Epsagon/epsagon SDK for python",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"What is Epsagon?",permalink:"/vives/docs-cloud-for-ai/Chapter 4 - Epsagon/setup"},next:{title:"Container Measurements [VM]",permalink:"/vives/docs-cloud-for-ai/Chapter 4 - Epsagon/container measurements"}},l={},s=[{value:"Usage",id:"usage",level:2},{value:"Calling the SDK",id:"calling-the-sdk",level:3},{value:"Tagging Traces",id:"tagging-traces",level:3},{value:"Custom Errors",id:"custom-errors",level:3},{value:"Trace URL",id:"trace-url",level:3},{value:"Trace main entry point",id:"trace-main-entry-point",level:3},{value:"Measure function Duration",id:"measure-function-duration",level:3}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"epsagon-sdk-for-python"},"Epsagon SDK for python"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Source: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.epsagon.com/docs/welcome/what-is-epsagon"},"Official Documentation")," ",(0,r.kt)("br",null),"\nGitHub: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/epsagon/epsagon-python"},"Github Documentation"))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Down below are some of the most important SDK functions. ",(0,r.kt)("br",null),"\nFor more, please refer to the documentation above."),(0,r.kt)("h3",{id:"calling-the-sdk"},"Calling the SDK"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"import epsagon\nepsagon.init(\n    token='epsagon-token',\n    app_name='app-name-stage',\n    metadata_only=False,\n)\n")),(0,r.kt)("h3",{id:"tagging-traces"},"Tagging Traces"),(0,r.kt)("p",null,"You can add custom tags to your traces, for easier filtering and aggregations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"epsagon.label('key', 'value')\nepsagon.label('user_id', user_id)\n")),(0,r.kt)("p",null,"Valid types are ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"bool"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"int")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"float")),(0,r.kt)("h3",{id:"custom-errors"},"Custom Errors"),(0,r.kt)("p",null,"You can set a trace as an error (although handled correctly) to get an alert or just follow it on the dashboard."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"try:\n    fail = 1 / 0\nexcept Exception as ex:\n    epsagon.error(ex)\n\n# Or manually specify Exception object\nepsagon.error(Exception('My custom error'))\n")),(0,r.kt)("h3",{id:"trace-url"},"Trace URL"),(0,r.kt)("p",null,"You can get the Epsagon dashboard URL for the current trace, using the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"import epsagon\n\n# Inside some endpoint or function\nprint('Epsagon trace URL:', epsagon.get_trace_url())\n")),(0,r.kt)("h3",{id:"trace-main-entry-point"},"Trace main entry point"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"# Wrap your entry point:\n@epsagon.python_wrapper(name='my-resource')\ndef main(params):\n    # Your code is here\n")),(0,r.kt)("h3",{id:"measure-function-duration"},"Measure function Duration"),(0,r.kt)("p",null,"You can measure internal functions duration by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"@epsagon.measure")," decorator. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"@epsagon.measure\ndef heavy_calculation():\n    # Code...\n")),(0,r.kt)("p",null,"This will ship another metric label to epsagon where the ",(0,r.kt)("inlineCode",{parentName:"p"},"key=heavy_calculation_duration")," and the value will be the actual duration, in seconds. ",(0,r.kt)("br",null),"\nYou'll be able to see this label in the trace search, visualize it over time, and generate alerts based on this metric."))}u.isMDXComponent=!0}}]);